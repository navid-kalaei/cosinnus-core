# Generated by Django 2.1.15 on 2020-10-05 08:15

import cosinnus.models.mixins.indexes
import cosinnus.utils.files
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import osm_field.fields
import osm_field.validators
import re


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cosinnus', '0058_merge_20200930_1011'),
    ]

    operations = [
        migrations.CreateModel(
            name='CosinnusOrganizationLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', osm_field.fields.OSMField(blank=True, lat_field='location_lat', lon_field='location_lon', null=True, verbose_name='Location')),
                ('location_lat', osm_field.fields.LatitudeField(blank=True, null=True, validators=[osm_field.validators.validate_latitude], verbose_name='Latitude')),
                ('location_lon', osm_field.fields.LongitudeField(blank=True, null=True, validators=[osm_field.validators.validate_longitude], verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'CosinnusOrganizationLocation',
                'verbose_name_plural': 'CosinnusOrganizationLocations',
            },
        ),
        migrations.CreateModel(
            name='CosinnusOrganizationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'pending'), (1, 'member'), (2, 'admin'), (3, 'pending-invited')], db_index=True, default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Is Moderator')),
            ],
            options={
                'verbose_name': 'Organization membership',
                'verbose_name_plural': 'Organization memberships',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CosinnusOrganizationSocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=100, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'CosinnusOrganizationSocialMedia',
                'verbose_name_plural': 'CosinnusOrganizationSocialMedia',
            },
        ),
        migrations.CreateModel(
            name='CosinnusUnregisteredUserOrganizationInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'pending'), (1, 'member'), (2, 'admin'), (3, 'pending-invited')], db_index=True, default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Is Moderator')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
            ],
            options={
                'verbose_name': 'Organization Invite for Unregistered User',
                'verbose_name_plural': 'Organization Invites for Unregistered Users',
            },
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='address',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='image',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='license',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='place_type',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='public',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='related_groups',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='synced',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='title',
        ),
        migrations.RemoveField(
            model_name='cosinnusorganization',
            name='version',
        ),
        migrations.AddField(
            model_name='cosinnusgroup',
            name='extra_fields',
            field=jsonfield.fields.JSONField(default={}),
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='avatar',
            field=models.ImageField(blank=True, max_length=250, null=True, upload_to=cosinnus.utils.files.get_organization_avatar_filename, verbose_name='Logo'),
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='extra_fields',
            field=jsonfield.fields.JSONField(default={}),
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='name',
            field=models.CharField(default='', max_length=250, verbose_name='Name of the organization'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[(1, 'Civil society organization (e.g. club, association, foundation, party)'), (2, 'Company (commercial)'), (3, 'Public institution (e.g. educational institution, library, swimming pool)'), (0, 'Other')], default=0, verbose_name='Organization type'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='type_other',
            field=models.CharField(blank=True, max_length=255, verbose_name='Organization type'),
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='wallpaper',
            field=models.ImageField(blank=True, help_text='Shown as large banner image on the Microsite (1140 x 240 px)', max_length=250, null=True, upload_to=cosinnus.utils.files.get_organization_wallpaper_filename, verbose_name='Wallpaper image'),
        ),
        migrations.AddField(
            model_name='tagobject',
            name='public',
            field=models.BooleanField(default=False, verbose_name='Publicly available via other platforms'),
        ),
        migrations.AlterField(
            model_name='cosinnusgroup',
            name='conference_is_running',
            field=models.BooleanField(default=False, help_text='Determins whether a group that is marked as conference is running', verbose_name='Conference is running'),
        ),
        migrations.AlterField(
            model_name='cosinnusgroup',
            name='is_conference',
            field=models.BooleanField(default=False, help_text='If a group is marked as conference it is possible to auto-generate accounts for workshop participants', verbose_name='Is conference'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='language',
            field=models.CharField(choices=[('de', 'Deutsch--NATIVE-LANGUAGE'), ('en', 'English--NATIVE-LANGUAGE'), ('fr', 'French--NATIVE-LANGUAGE'), ('pl', 'Polish--NATIVE-LANGUAGE'), ('es', 'Spanish--NATIVE-LANGUAGE'), ('be', 'Belarussian--NATIVE-LANGUAGE'), ('uk', 'Ukrainian--NATIVE-LANGUAGE'), ('ru', 'Russian--NATIVE-LANGUAGE'), ('az', 'Azerbaijani--NATIVE-LANGUAGE'), ('hy', 'Armenian--NATIVE-LANGUAGE'), ('ka', 'Georgian--NATIVE-LANGUAGE'), ('ro', 'Romanian--NATIVE-LANGUAGE')], default='de', max_length=2, verbose_name='Language'),
        ),
        migrations.AddField(
            model_name='cosinnusunregistereduserorganizationinvite',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unregistered_user_invites', to='cosinnus.CosinnusOrganization'),
        ),
        migrations.AddField(
            model_name='cosinnusunregistereduserorganizationinvite',
            name='invited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cosinnus_organization_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cosinnusorganizationsocialmedia',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_media', to='cosinnus.CosinnusOrganization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='cosinnusorganizationmembership',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='cosinnus.CosinnusOrganization'),
        ),
        migrations.AddField(
            model_name='cosinnusorganizationmembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cosinnusorganizationlocation',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='cosinnus.CosinnusOrganization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='cosinnus_organizations', through='cosinnus.CosinnusOrganizationMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='cosinnusunregistereduserorganizationinvite',
            unique_together={('email', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='cosinnusorganizationmembership',
            unique_together={('user', 'group')},
        ),
    ]
