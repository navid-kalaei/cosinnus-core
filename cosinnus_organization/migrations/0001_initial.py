# Generated by Django 2.1.15 on 2020-10-05 20:18

import cosinnus.models.membership
import cosinnus.models.mixins.indexes
import cosinnus.utils.files
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import osm_field.fields
import osm_field.validators
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cosinnus', '0059_auto_20201005_1015'),
        migrations.swappable_dependency(settings.COSINNUS_TAG_OBJECT_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CosinnusOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name of the organization')),
                ('slug', models.SlugField(help_text='Be extremely careful when changing this slug manually! There can be many side-effects (redirects breaking e.g.)!', verbose_name='Slug')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Civil society organization (e.g. club, association, foundation, party)'), (2, 'Company (commercial)'), (3, 'Public institution (e.g. educational institution, library, swimming pool)'), (0, 'Other')], verbose_name='Organization type')),
                ('type_other', models.CharField(blank=True, max_length=255, verbose_name='Organization type')),
                ('description', models.TextField(blank=True, help_text='Short Description. Internal, will not be shown publicly.', verbose_name='Short Description')),
                ('avatar', models.ImageField(blank=True, max_length=250, null=True, upload_to=cosinnus.utils.files.get_organization_avatar_filename, verbose_name='Logo')),
                ('wallpaper', models.ImageField(blank=True, help_text='Shown as large banner image on the Microsite (1140 x 240 px)', max_length=250, null=True, upload_to=cosinnus.utils.files.get_organization_wallpaper_filename, verbose_name='Wallpaper image')),
                ('website', models.URLField(blank=True, max_length=100, null=True, verbose_name='Website')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Phone Number')),
                ('is_active', models.BooleanField(default=True, help_text='If an organization is not active, it counts as non-existent for all purposes and views on the website.', verbose_name='Is active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('extra_fields', jsonfield.fields.JSONField(blank=True, default={})),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('media_tag', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.COSINNUS_TAG_OBJECT_MODEL)),
                ('portal', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to='cosinnus.CosinnusPortal', verbose_name='Portal')),
            ],
            options={
                'verbose_name': 'Cosinnus Organization',
                'verbose_name_plural': 'Cosinnus Organizations',
                'ordering': ('created',),
            },
            bases=(cosinnus.models.mixins.indexes.IndexingUtilsMixin, cosinnus.models.membership.MembersManagerMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CosinnusOrganizationLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', osm_field.fields.OSMField(blank=True, lat_field='location_lat', lon_field='location_lon', null=True, verbose_name='Location')),
                ('location_lat', osm_field.fields.LatitudeField(blank=True, null=True, validators=[osm_field.validators.validate_latitude], verbose_name='Latitude')),
                ('location_lon', osm_field.fields.LongitudeField(blank=True, null=True, validators=[osm_field.validators.validate_longitude], verbose_name='Longitude')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='cosinnus_organization.CosinnusOrganization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'CosinnusOrganizationLocation',
                'verbose_name_plural': 'CosinnusOrganizationLocations',
            },
        ),
        migrations.CreateModel(
            name='CosinnusOrganizationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'pending'), (1, 'member'), (2, 'admin'), (3, 'pending-invited')], db_index=True, default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Is Moderator')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='cosinnus_organization.CosinnusOrganization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization membership',
                'verbose_name_plural': 'Organization memberships',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CosinnusOrganizationSocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=100, verbose_name='URL')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_media', to='cosinnus_organization.CosinnusOrganization', verbose_name='Organization')),
            ],
            options={
                'verbose_name': 'CosinnusOrganizationSocialMedia',
                'verbose_name_plural': 'CosinnusOrganizationSocialMedia',
            },
        ),
        migrations.CreateModel(
            name='CosinnusUnregisteredUserOrganizationInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'pending'), (1, 'member'), (2, 'admin'), (3, 'pending-invited')], db_index=True, default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Is Moderator')),
                ('email', models.EmailField(max_length=254, verbose_name='email address')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unregistered_user_invites', to='cosinnus_organization.CosinnusOrganization')),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cosinnus_organization_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization Invite for Unregistered User',
                'verbose_name_plural': 'Organization Invites for Unregistered Users',
            },
        ),
        migrations.AddField(
            model_name='cosinnusorganization',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='cosinnus_organizations', through='cosinnus_organization.CosinnusOrganizationMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='cosinnusunregistereduserorganizationinvite',
            unique_together={('email', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='cosinnusorganizationmembership',
            unique_together={('user', 'group')},
        ),
        migrations.AlterUniqueTogether(
            name='cosinnusorganization',
            unique_together={('slug', 'portal')},
        ),
    ]
